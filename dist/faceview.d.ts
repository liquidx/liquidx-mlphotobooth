export const NUM_KEYPOINTS: 468;
export class FaceView {
    constructor(scene: any, width: any, height: any, options: any);
    cameraX: number;
    cameraY: number;
    cameraZ: number;
    cameraAngleX: number;
    cameraAngleY: number;
    cameraAngleZ: number;
    targetFaceHeight: number;
    applyScaling: boolean;
    shouldCapture: any;
    width: any;
    height: any;
    options: any;
    wireframe: boolean;
    showPoints: boolean;
    showAxes: boolean;
    showNormal: boolean;
    meshIndex: number[];
    cachedPredictions: any;
    debugElement: Element | null;
    scene: any;
    renderer: any;
    wireMaterial: any;
    meshMaterial: any;
    camera: any;
    get canvas(): any;
    showDebug(message: any): void;
    cameraDebug(): void;
    cameraControlsDidUpdate(): void;
    cameraDidMove(): void;
    updateAxes(): void;
    axes: any;
    computeMeshIndexFromFaceMesh(onlyShowHalfFace: any): number[];
    updateScene(): void;
    updateFaceWithPredictions(predictions: any): void;
    mesh: any;
    negateMatrix(): any;
    centerAlignTranslationMatrix(vertices: any): any;
    computeFaceNormal(points: any, translationMatrix: any): {
        normal: any;
        triangle: any;
    } | null;
    transformFace(vertices: any, transforms: any): any;
    buildFaceMeshWithPrediction(predictions: any, material: any): any;
    renderOnce(): void;
    animate(): void;
    capture(callback: any): void;
    didCanvasResize(renderer: any): boolean;
}
